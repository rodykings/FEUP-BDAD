
group: Faculdade 

Aluno = {
	nr:number, Nome:string
	100, Joao
	110, Manuel
	120, Rui
	130, Abel
	140, Fernando
	150, Ismael
}

Prof = {
  sigla:string, Nome:string
	ECO, Eugenio
	FNF, Fernando
	JLS, Joao
}

Cadeira = {
  cod:string, design:string, curso:string, regente:string
	TS1, 'Teoria dos Sistemas I', IS, FNF
	BD, 'Bases de Dados', IS, ECO
	EIA, 'Estruturas de Informação e Algoritmos', IS, ECO
	EP, 'Electrónica de Potência', AC, JLS
	IE, 'Instalações Eléctricas', AC, JLS
}

Prova = {
  nr:number, cod:string, data:date, nota:number
	100, TS1, 1992-02-11, 8
	100, TS1, 1993-02-02, 11
	100, BD, 1993-02-04, 17
	100, EIA, 1992-01-29, 16
	100, EIA, 1993-02-02, 13
	110, EP, 1992-01-30, 12
	110, IE, 1992-02-05, 10
	110, IE, 1993-02-01, 14
	120, TS1, 1993-01-31, 15 
	120, EP, 1993-02-04, 13
	130, BD, 1993-02-04, 12
	130, EIA, 1993-02-02, 7
	130, TS1, 1993-02-11, 8
	140, TS1, 1993-01-31, 10
	140, TS1, 1992-02-11, 13
	140, EIA, 1993-02-02, 11
	150, TS1, 1992-02-11, 10
	150, EP, 1993-02-02, 11
	150, BD, 1993-02-04, 17
	150, EIA, 1992-01-29, 16
	150, IE, 1993-02-02, 13
}


USE THIS CODE IN RELAX

1. π nr Aluno
2. π cod,design σ curso='AC' Cadeira
3. π Nome (Aluno ⨝ Prof)
4. (π Nome Aluno) - (π Nome Prof)
5. (π Nome Aluno) ∪ (π Nome Prof)
6. π Nome σ(cod='TS1') (Aluno ⨝ Prova) 
7. π Nome σ(curso='IS') (Aluno ⨝ (Cadeira ⨝ Prova))
8. σ(curso='IS') ((π Nome,cod (Aluno ⨝ σ(nota≥10) Prova))⨝ Cadeira) ÷ (πcod σ(curso='IS') (Prova ⨝ Cadeira))
9. γ max(nota)->maxNota Prova
10. γ avg(nota)->averageNota σ(cod='BD') Prova
11. γ count(nr)->numAlunos (Aluno)
12. γ curso;count(cod)->numCadeiras Cadeira
13. (γ nr;count(data)->numProvas Prova) ⨝ Aluno
14. γ avg(numProvas)->mediaProvas (γ nr;count(data)->numProvas Prova)
15. γ nr,Nome;avg(nota)->media (σnota≥10 (Aluno ⨝ Prova ⨝ Cadeira))
16. π Nome, cod, nota (Aluno ⨝ ((γ cod; max(nota)->nota Prova) ⨝ Prova))
